{"version":3,"sources":["components/Bank/Dashboard/Dashboard.module.css","components/Bank/Controls/Controls.module.css","components/Bank/Balance/Balans.module.css","components/Bank/History/History.module.css","components/Bank/Controls/Controls.js","components/Bank/Balance/Balans.js","components/Bank/History/History.js","components/Bank/Dashboard/Dashboard.js","components/App.js","index.js"],"names":["module","exports","dashboard","controls","balans","history","controlsClasses","styles","Controls","state","value","handlerChange","e","_this","setState","target","reset","handlerSubmit","notify2","name","checkBalance","notify","props","save","toast","Number","balance","this","react_default","a","createElement","className","react_toastify","position","type","onChange","onClick","Component","balansClasses","greenStyle","color","redStyle","Balans","_ref","style","deposite","withdrow","historyClass","History","transactions","map","el","key","id","amount","date","Dashboard","dashboardClasses","uniqid","Date","toLocaleString","transaction","prevState","concat","Object","toConsumableArray","data","localStorage","getItem","JSON","parse","setItem","stringify","_this$state","Bank_Controls_Controls","Balance_Balans","Bank_History_History","App","Fragment","Dashboard_Dashboard","ReactDOM","render","components_App","document","querySelector"],"mappings":"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","file":"static/js/main.2de89681.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dashboard\":\"Dashboard_dashboard__2VPtw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"Controls_controls__3haZI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"balans\":\"Balans_balans__9n7cf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"history\":\"History_history__1AOWS\"};","import React, { Component } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport PropTypes from 'prop-types';\nimport styles from './Controls.module.css';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst controlsClasses = [styles.controls];\n\nclass Controls extends Component {\n  state = {\n    value: '',\n  };\n\n  handlerChange = e => {\n    this.setState({ value: e.target.value });\n  };\n\n  reset = () => {\n    this.setState({\n      value: '',\n    });\n  };\n\n  handlerSubmit = e => {\n    if (this.state.value <= 0 || this.state.value === '') {\n      this.notify2();\n      return;\n    }\n    if (e.target.name === 'withdraw') {\n      if (!this.checkBalance()) {\n        this.notify();\n        this.reset();\n        return;\n      }\n    }\n    this.props.save(this.state.value, e.target.name);\n    this.reset();\n  };\n\n  notify = () =>\n    toast('На счету недостаточно средств для проведения операции!');\n\n  notify2 = () => toast('Введите сумму для проведения операции.');\n\n  checkBalance = () => {\n    return Number(this.props.balance) >= Number(this.state.value);\n  };\n\n  render() {\n    const { value } = this.state;\n    return (\n      <form className={controlsClasses}>\n        <ToastContainer position=\"top-center\" />\n        <input type=\"number\" value={value} onChange={this.handlerChange} />\n        <button name=\"deposit\" type=\"button\" onClick={this.handlerSubmit}>\n          Deposit\n        </button>\n        <button name=\"withdraw\" type=\"button\" onClick={this.handlerSubmit}>\n          Withdraw\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default Controls;\n\nControls.propTypes = {\n  save: PropTypes.func.isRequired,\n  balance: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Balans.module.css';\n\nconst balansClasses = [styles.balans];\nconst greenStyle = {\n  color: 'green',\n};\nconst redStyle = {\n  color: 'red',\n};\n\nconst Balans = ({ balance }) => (\n  <p className={balansClasses}>\n    <span>\n      <span style={greenStyle}>&#8593; {balance.deposite}</span>\n    </span>\n    <span>\n      <span style={redStyle}>&darr; {balance.withdrow}</span>\n    </span>\n    <span>Balance: {balance.balance}$</span>\n  </p>\n);\n\nexport default Balans;\n\nBalans.propTypes = {\n  balance: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './History.module.css';\n\nconst historyClass = [styles.history];\n\nconst History = ({ transactions }) => (\n  <table className={historyClass}>\n    <thead>\n      <tr>\n        <th>Transaction</th>\n        <th>Amount</th>\n        <th>Date</th>\n      </tr>\n    </thead>\n    <tbody>\n      {transactions.map(el => (\n        <tr key={el.id}>\n          <td>{el.type}</td>\n          <td>{el.amount}$</td>\n          <td>{el.date}</td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n\nexport default History;\n\nHistory.propTypes = {\n  transactions: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n","import React, { Component } from 'react';\nimport uniqid from 'uniqid';\nimport styles from './Dashboard.module.css';\nimport Controls from '../Controls/Controls';\nimport Balans from '../Balance/Balans';\nimport History from '../History/History';\n\nexport default class Dashboard extends Component {\n  dashboardClasses = [styles.dashboard];\n\n  state = {\n    balance: 0,\n    deposite: 0,\n    withdrow: 0,\n    transactions: [],\n  };\n\n  componentDidMount() {\n    const data = localStorage.getItem('transactions');\n    if (data) {\n      this.setState((this.state = JSON.parse(data)));\n    }\n  }\n\n  componentDidUpdate() {\n    localStorage.setItem('transactions', JSON.stringify(this.state));\n  }\n\n  save = (value, type) => {\n    const id = uniqid();\n    const date = Date().toLocaleString();\n    const transaction = {\n      id,\n      type,\n      amount: value,\n      date,\n    };\n    if (type === 'deposit') {\n      this.setState(prevState => ({\n        balance: `${Number(prevState.balance) + Number(value)}`,\n        deposite: `${Number(prevState.deposite) + Number(value)}`,\n        transactions: [...prevState.transactions, transaction],\n      }));\n    }\n    if (type === 'withdraw') {\n      this.setState(prevState => ({\n        balance: `${Number(prevState.balance) - Number(value)}`,\n        withdrow: `${Number(prevState.withdrow) + Number(value)}`,\n        transactions: [...prevState.transactions, transaction],\n      }));\n    }\n  };\n\n  render() {\n    const { balance, transactions } = this.state;\n    return (\n      <div className={this.dashboardClasses}>\n        <Controls save={this.save} balance={balance} />\n        <Balans balance={this.state} />\n        <History transactions={transactions} />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport Dashboard from './Bank/Dashboard/Dashboard';\n\nconst App = () => (\n  <>\n    <Dashboard />\n  </>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}